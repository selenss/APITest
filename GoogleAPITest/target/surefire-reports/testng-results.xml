<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="15" passed="14">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="27426" started-at="2017-02-27T10:12:39Z" finished-at="2017-02-27T10:13:07Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="27426" started-at="2017-02-27T10:12:39Z" finished-at="2017-02-27T10:13:07Z">
      <class name="google.api.test.PlaceSearch">
        <test-method status="PASS" signature="getRequestLanguageEnglish()[pri:0, instance:google.api.test.PlaceSearch@2c8d66b2]" name="getRequestLanguageEnglish" duration-ms="3560" started-at="2017-02-27T13:12:39Z" finished-at="2017-02-27T13:12:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestLanguageEnglish -->
        <test-method status="PASS" signature="getRequestLanguageTurkish()[pri:0, instance:google.api.test.PlaceSearch@2c8d66b2]" name="getRequestLanguageTurkish" duration-ms="1927" started-at="2017-02-27T13:12:43Z" finished-at="2017-02-27T13:12:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestLanguageTurkish -->
        <test-method status="FAIL" signature="getRequestRadiusGreaterThan5000()[pri:0, instance:google.api.test.PlaceSearch@2c8d66b2]" name="getRequestRadiusGreaterThan5000" duration-ms="1969" started-at="2017-02-27T13:12:45Z" finished-at="2017-02-27T13:12:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
JSON path status doesn't match.
Expected: INVALID_REQUEST
  Actual: OK
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
JSON path status doesn't match.
Expected: INVALID_REQUEST
  Actual: OK

	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:83)
	at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:77)
	at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
	at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:60)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:235)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:247)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:471)
	at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:636)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:210)
	at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:59)
	at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)
	at io.restassured.internal.ResponseSpecificationImpl.content(ResponseSpecificationImpl.groovy:265)
	at io.restassured.specification.ResponseSpecification$content$1.callCurrent(Unknown Source)
	at io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:248)
	at io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:268)
	at google.api.test.PlaceSearch.getRequestRadiusGreaterThan5000(PlaceSearch.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:382)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1293)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1218)
	at org.testng.TestNG.runSuites(TestNG.java:1133)
	at org.testng.TestNG.run(TestNG.java:1104)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestRadiusGreaterThan5000 -->
      </class> <!-- google.api.test.PlaceSearch -->
      <class name="google.api.test.PlaceDetails">
        <test-method status="PASS" signature="getRequestDifferentPlaceID()[pri:0, instance:google.api.test.PlaceDetails@5a39699c]" name="getRequestDifferentPlaceID" duration-ms="1726" started-at="2017-02-27T13:12:47Z" finished-at="2017-02-27T13:12:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestDifferentPlaceID -->
        <test-method status="PASS" signature="getRequestEmptyAPIKey()[pri:0, instance:google.api.test.PlaceDetails@5a39699c]" name="getRequestEmptyAPIKey" duration-ms="1638" started-at="2017-02-27T13:12:49Z" finished-at="2017-02-27T13:12:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestEmptyAPIKey -->
        <test-method status="PASS" signature="getRequestEmptyPlaceID()[pri:0, instance:google.api.test.PlaceDetails@5a39699c]" name="getRequestEmptyPlaceID" duration-ms="1630" started-at="2017-02-27T13:12:50Z" finished-at="2017-02-27T13:12:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestEmptyPlaceID -->
        <test-method status="PASS" signature="getRequestInvalidAPIKey()[pri:0, instance:google.api.test.PlaceDetails@5a39699c]" name="getRequestInvalidAPIKey" duration-ms="1630" started-at="2017-02-27T13:12:52Z" finished-at="2017-02-27T13:12:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestInvalidAPIKey -->
        <test-method status="PASS" signature="getRequestInvalidParams()[pri:0, instance:google.api.test.PlaceDetails@5a39699c]" name="getRequestInvalidParams" duration-ms="1628" started-at="2017-02-27T13:12:53Z" finished-at="2017-02-27T13:12:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestInvalidParams -->
        <test-method status="PASS" signature="getRequestInvalidPlaceID()[pri:0, instance:google.api.test.PlaceDetails@5a39699c]" name="getRequestInvalidPlaceID" duration-ms="1632" started-at="2017-02-27T13:12:55Z" finished-at="2017-02-27T13:12:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestInvalidPlaceID -->
        <test-method status="PASS" signature="getRequestMissingAPIKey()[pri:0, instance:google.api.test.PlaceDetails@5a39699c]" name="getRequestMissingAPIKey" duration-ms="1669" started-at="2017-02-27T13:12:57Z" finished-at="2017-02-27T13:12:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestMissingAPIKey -->
        <test-method status="PASS" signature="getRequestMissingPlaceID()[pri:0, instance:google.api.test.PlaceDetails@5a39699c]" name="getRequestMissingPlaceID" duration-ms="1652" started-at="2017-02-27T13:12:58Z" finished-at="2017-02-27T13:13:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestMissingPlaceID -->
        <test-method status="PASS" signature="getRequestValidParams()[pri:0, instance:google.api.test.PlaceDetails@5a39699c]" name="getRequestValidParams" duration-ms="1682" started-at="2017-02-27T13:13:00Z" finished-at="2017-02-27T13:13:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestValidParams -->
      </class> <!-- google.api.test.PlaceDetails -->
      <class name="google.api.test.PlaceAddDelete">
        <test-method status="PASS" signature="successfulPOSTRequestAdd()[pri:1, instance:google.api.test.PlaceAddDelete@7d417077]" name="successfulPOSTRequestAdd" duration-ms="1691" started-at="2017-02-27T13:13:02Z" description="Successful Place Add" finished-at="2017-02-27T13:13:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulPOSTRequestAdd -->
        <test-method status="PASS" signature="successfulPOSTRequestDelete()[pri:2, instance:google.api.test.PlaceAddDelete@7d417077]" name="successfulPOSTRequestDelete" duration-ms="1661" started-at="2017-02-27T13:13:03Z" description="Successful Place Delete" finished-at="2017-02-27T13:13:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulPOSTRequestDelete -->
        <test-method status="PASS" signature="alreadyDeletedPOSTRequestDelete()[pri:3, instance:google.api.test.PlaceAddDelete@7d417077]" name="alreadyDeletedPOSTRequestDelete" duration-ms="1702" started-at="2017-02-27T13:13:05Z" description="status message for already deleted place in response body" depends-on-methods="google.api.test.PlaceAddDelete.successfulPOSTRequestDelete" finished-at="2017-02-27T13:13:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alreadyDeletedPOSTRequestDelete -->
      </class> <!-- google.api.test.PlaceAddDelete -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
